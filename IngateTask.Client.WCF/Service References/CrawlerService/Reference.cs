//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IngateTask.Client.WCF.CrawlerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CrawlerService.ICrawler", CallbackContract=typeof(IngateTask.Client.WCF.CrawlerService.ICrawlerCallback))]
    public interface ICrawler {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrawler/SetInputData", ReplyAction="http://tempuri.org/ICrawler/SetInputDataResponse")]
        void SetInputData(IngateTask.PortableLibrary.Classes.InputFields[] inputFieldses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrawler/SetInputData", ReplyAction="http://tempuri.org/ICrawler/SetInputDataResponse")]
        System.Threading.Tasks.Task SetInputDataAsync(IngateTask.PortableLibrary.Classes.InputFields[] inputFieldses);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrawler/Interpret", ReplyAction="http://tempuri.org/ICrawler/InterpretResponse")]
        void Interpret(string command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrawler/Interpret", ReplyAction="http://tempuri.org/ICrawler/InterpretResponse")]
        System.Threading.Tasks.Task InterpretAsync(string command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrawler/OpenSession", ReplyAction="http://tempuri.org/ICrawler/OpenSessionResponse")]
        void OpenSession(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrawler/OpenSession", ReplyAction="http://tempuri.org/ICrawler/OpenSessionResponse")]
        System.Threading.Tasks.Task OpenSessionAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICrawlerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrawler/OnCallBack", ReplyAction="http://tempuri.org/ICrawler/OnCallBackResponse")]
        void OnCallBack(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICrawler/GetClientData", ReplyAction="http://tempuri.org/ICrawler/GetClientDataResponse")]
        void GetClientData(bool sendMeData, string filePath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICrawlerChannel : IngateTask.Client.WCF.CrawlerService.ICrawler, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CrawlerClient : System.ServiceModel.DuplexClientBase<IngateTask.Client.WCF.CrawlerService.ICrawler>, IngateTask.Client.WCF.CrawlerService.ICrawler {
        
        public CrawlerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CrawlerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CrawlerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CrawlerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CrawlerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SetInputData(IngateTask.PortableLibrary.Classes.InputFields[] inputFieldses) {
            base.Channel.SetInputData(inputFieldses);
        }
        
        public System.Threading.Tasks.Task SetInputDataAsync(IngateTask.PortableLibrary.Classes.InputFields[] inputFieldses) {
            return base.Channel.SetInputDataAsync(inputFieldses);
        }
        
        public void Interpret(string command) {
            base.Channel.Interpret(command);
        }
        
        public System.Threading.Tasks.Task InterpretAsync(string command) {
            return base.Channel.InterpretAsync(command);
        }
        
        public void OpenSession(string userName) {
            base.Channel.OpenSession(userName);
        }
        
        public System.Threading.Tasks.Task OpenSessionAsync(string userName) {
            return base.Channel.OpenSessionAsync(userName);
        }
    }
}
